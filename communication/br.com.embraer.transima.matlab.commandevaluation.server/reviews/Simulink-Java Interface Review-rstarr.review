<?xml version="1.0" encoding="UTF-8"?>
<Review id="Simulink-Java Interface Review">
  <ReviewIssue id="HE351R7R">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-09 :: 16:00:20:871 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-09 :: 16:02:20:962 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo>rstarr</AssignedTo>
    <File line="5">.classpath</File>
    <Type>item.label.unset</Type>
    <Severity>item.label.unset</Severity>
    <Summary>Should the project depend on a given JMI?</Summary>
    <Description>This dependency appears to bring some problems:
1) JMI.jar cannot be redistributed. It can not be put under version control.
2) Each Matlab has a version of JMI. If we put one here will it cause incompatibilities?
</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.label.unset</Resolution>
    <Status>item.status.label.open</Status>
  </ReviewIssue>
  <ReviewIssue id="HE3568QB">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-09 :: 16:03:50:195 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-09 :: 16:05:46:115 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo>rstarr</AssignedTo>
    <File line="35">build.xml</File>
    <Type>item.label.unset</Type>
    <Severity>item.label.unset</Severity>
    <Summary>Which is the root package name? hu.bme.mit. or br.com.embraer?</Summary>
    <Description>It looks like you changed the package names and forgot this entry.</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.label.unset</Resolution>
    <Status>item.status.label.open</Status>
  </ReviewIssue>
  <ReviewIssue id="HE35C0TH">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-09 :: 16:08:19:877 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-12 :: 15:26:38:960 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo>rstarr</AssignedTo>
    <File line="13">src/br/com/embraer/transima/matlab/MainTest.java</File>
    <Type>item.label.unset</Type>
    <Severity>item.label.unset</Severity>
    <Summary>Shouldn't it be on the test package?</Summary>
    <Description>Why is there a test function in a non-test package?</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.label.unset</Resolution>
    <Status>item.status.label.open</Status>
  </ReviewIssue>
  <ReviewIssue id="HE7EE7WS">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-12 :: 15:33:03:628 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-12 :: 15:39:23:089 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo>rstarr</AssignedTo>
    <File line="30">src/br/com/embraer/transima/matlab/util/MatlabProviderProperties.java</File>
    <Type>item.type.label.programLogic</Type>
    <Severity>item.severity.label.normal</Severity>
    <Summary>Maybe change the default to matlabServerConfig.properties</Summary>
    <Description>This would make clear which serverConfig we are talking about...</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.label.unset</Resolution>
    <Status>item.status.label.open</Status>
  </ReviewIssue>
  <ReviewIssue id="HE7EFKP9">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-12 :: 15:34:06:861 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-12 :: 15:40:53:494 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo>rstarr</AssignedTo>
    <File line="25">src/br/com/embraer/transima/matlab/util/MatlabProviderProperties.java</File>
    <Type>item.label.unset</Type>
    <Severity>item.label.unset</Severity>
    <Summary>We should have an option to pass in the properties file?</Summary>
    <Description>This may even help testing this class.</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.label.unset</Resolution>
    <Status>item.status.label.open</Status>
  </ReviewIssue>
  <ReviewIssue id="HE7EHZAD">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-12 :: 15:35:59:077 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-12 :: 15:39:04:824 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo>rstarr</AssignedTo>
    <File line="32">src/br/com/embraer/transima/matlab/util/MatlabProviderProperties.java</File>
    <Type>item.type.label.programLogic</Type>
    <Severity>item.severity.label.normal</Severity>
    <Summary>This seens to be hiding a problem</Summary>
    <Description>If the serverconfig properties is not found, how will the user know?
I do not know which is the best solution, but the constructor could throw the error, there could exist a flag and so on.</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.label.unset</Resolution>
    <Status>item.status.label.open</Status>
  </ReviewIssue>
  <ReviewIssue id="HE7EK08M">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-12 :: 15:37:33:622 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-12 :: 15:38:55:715 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo>rstarr</AssignedTo>
    <File line="43">src/br/com/embraer/transima/matlab/util/MatlabProviderProperties.java</File>
    <Type>item.type.label.programLogic</Type>
    <Severity>item.severity.label.normal</Severity>
    <Summary>Which is better: returning null or throwing an exception?</Summary>
    <Description>In this case, if the user tries to get an unknown property, null is returned.
This is just an opinion, but I think it is better practice to throw an exception. This will ensure the user treats the problem (he may always forget to check for a null return...)</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.label.unset</Resolution>
    <Status>item.status.label.open</Status>
  </ReviewIssue>
  <ReviewIssue id="HE7EN4QH">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-12 :: 15:39:59:417 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-12 :: 15:40:49:807 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo>rstarr</AssignedTo>
    <File line="18">src/br/com/embraer/transima/matlab/util/MatlabRunningManager.java</File>
    <Type>item.label.unset</Type>
    <Severity>item.label.unset</Severity>
    <Summary>What does these numbers mean???</Summary>
    <Description>Please give some comment on the meaning of these constants.</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.label.unset</Resolution>
    <Status>item.status.label.open</Status>
  </ReviewIssue>
  <ReviewIssue id="HEAEAOZ0">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-14 :: 17:53:37:644 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-14 :: 17:56:13:302 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo>rstarr</AssignedTo>
    <File line="93">src/br/com/embraer/transima/matlab/util/MatlabRunningManager.java</File>
    <Type>item.label.unset</Type>
    <Severity>item.label.unset</Severity>
    <Summary>Does this work in 32 bit machines as well?</Summary>
    <Description>I may not understand this registry magic well, but I think it presuposes a 64bit Windows machine. What if there is no \Wow6432Node\ node?</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.label.unset</Resolution>
    <Status>item.status.label.open</Status>
  </ReviewIssue>
  <ReviewIssue id="HEAED0OM">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-14 :: 17:55:26:134 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-14 :: 18:00:58:589 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo>rstarr</AssignedTo>
    <File line="102">src/br/com/embraer/transima/matlab/util/MatlabRunningManager.java</File>
    <Type>item.label.unset</Type>
    <Severity>item.label.unset</Severity>
    <Summary>Add better error messages</Summary>
    <Description>You should add better error messages and, in my opinion, avoid returning null. Throw the error and force the caller to deal with it.</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.label.unset</Resolution>
    <Status>item.status.label.open</Status>
  </ReviewIssue>
  <ReviewIssue id="HEAEJ8XO">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-14 :: 18:00:16:764 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-14 :: 18:02:50:829 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo>rstarr</AssignedTo>
    <File line="160">src/br/com/embraer/transima/matlab/util/MatlabRunningManager.java</File>
    <Type>item.label.unset</Type>
    <Severity>item.label.unset</Severity>
    <Summary>What if I have several of the same version open</Summary>
    <Description>I know I am being annoying, but if it is not possible to solve this problem, please leave a comment here about it.</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.label.unset</Resolution>
    <Status>item.status.label.open</Status>
  </ReviewIssue>
  <ReviewIssue id="HEAEKZJT">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-14 :: 18:01:37:913 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-14 :: 18:02:45:392 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo>rstarr</AssignedTo>
    <File line="166">src/br/com/embraer/transima/matlab/util/MatlabRunningManager.java</File>
    <Type>item.label.unset</Type>
    <Severity>item.label.unset</Severity>
    <Summary>What is the meaning of this (!found)</Summary>
    <Description>As I understood it, if I have a version of Matlab 2012b 32bits AND a version of Matlab 2012b 64bits, only the first one would be reported. Why that? I would expect both to be reported.</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.label.unset</Resolution>
    <Status>item.status.label.open</Status>
  </ReviewIssue>
  <ReviewIssue id="HEAEUVEB">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-14 :: 18:09:19:091 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-14 :: 18:09:53:244 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo></AssignedTo>
    <File line="71">src/br/com/embraer/transima/matlab/util/WinRegistry.java</File>
    <Type></Type>
    <Severity></Severity>
    <Summary>What is the meaning of this error?</Summary>
    <Description>Should we really be failing silently here?</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution></Resolution>
    <Status></Status>
  </ReviewIssue>
  <ReviewIssue id="HEAEX2KR">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-14 :: 18:11:01:707 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-14 :: 18:13:25:881 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo></AssignedTo>
    <File line="101">src/br/com/embraer/transima/matlab/util/WinRegistry.java</File>
    <Type></Type>
    <Severity></Severity>
    <Summary>Create an enum of hKey and let the compiler avoid this error</Summary>
    <Description>If you create an Enum for hKey, you do not need to throw this error because the compiler will automatically check this for you.

I would do the same about the other parameters.</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution></Resolution>
    <Status></Status>
  </ReviewIssue>
  <ReviewIssue id="HEAEZCDD">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-14 :: 18:12:47:713 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-14 :: 18:12:54:072 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo></AssignedTo>
    <File line="127">src/br/com/embraer/transima/matlab/util/WinRegistry.java</File>
    <Type></Type>
    <Severity></Severity>
    <Summary>Create an enum of hKey and let the compiler avoid this error</Summary>
    <Description>Ditto.</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution></Resolution>
    <Status></Status>
  </ReviewIssue>
  <ReviewIssue id="HEAF240A">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-14 :: 18:14:56:842 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-14 :: 18:15:14:325 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo></AssignedTo>
    <File line="153">src/br/com/embraer/transima/matlab/util/WinRegistry.java</File>
    <Type></Type>
    <Severity></Severity>
    <Summary>Create enum of hKey</Summary>
    <Description>Ditto</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution></Resolution>
    <Status></Status>
  </ReviewIssue>
  <ReviewIssue id="HEB8EDWT">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-15 :: 07:56:18:413 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-15 :: 07:58:27:008 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo></AssignedTo>
    <File line="178">src/br/com/embraer/transima/matlab/util/WinRegistry.java</File>
    <Type></Type>
    <Severity></Severity>
    <Summary>Create enum of hKey</Summary>
    <Description>Ditto.
I will stop repeating this comment on the next methods.</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution></Resolution>
    <Status></Status>
  </ReviewIssue>
  <ReviewIssue id="HEB8EQ3E">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-15 :: 07:56:34:202 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-15 :: 07:57:43:303 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo></AssignedTo>
    <File line="181">src/br/com/embraer/transima/matlab/util/WinRegistry.java</File>
    <Type></Type>
    <Severity></Severity>
    <Summary>Why IllegalArgumentException?</Summary>
    <Description>The only error here that is possible to happen is an invalid key?
Maybe this error class should be different.</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution></Resolution>
    <Status></Status>
  </ReviewIssue>
  <ReviewIssue id="HEB8J0GS">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-15 :: 07:59:54:268 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-15 :: 08:00:13:152 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo></AssignedTo>
    <File line="232">src/br/com/embraer/transima/matlab/util/WinRegistry.java</File>
    <Type></Type>
    <Severity></Severity>
    <Summary>Why IllegalArgumentException?</Summary>
    <Description></Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution></Resolution>
    <Status></Status>
  </ReviewIssue>
  <ReviewIssue id="HEB8KA7V">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-15 :: 08:00:53:563 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-15 :: 08:00:58:456 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo></AssignedTo>
    <File line="259">src/br/com/embraer/transima/matlab/util/WinRegistry.java</File>
    <Type></Type>
    <Severity></Severity>
    <Summary>Why IllegalArgumentException?</Summary>
    <Description></Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution></Resolution>
    <Status></Status>
  </ReviewIssue>
  <ReviewIssue id="HEB93IL9">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-15 :: 08:15:50:877 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-15 :: 08:21:13:506 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo>rstarr</AssignedTo>
    <File line="378">src/br/com/embraer/transima/matlab/util/WinRegistry.java</File>
    <Type>item.label.unset</Type>
    <Severity>item.label.unset</Severity>
    <Summary>What if this function returns an error?</Summary>
    <Description>The call to regSetValueEx will probably fail, maybe crashing the JVM?
(I know this method is not used, but a FIXME would be good to alert possible users)</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.label.unset</Resolution>
    <Status>item.status.label.open</Status>
  </ReviewIssue>
  <ReviewIssue id="HEBK9KQU">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-15 :: 13:28:29:382 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-15 :: 13:29:07:162 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo></AssignedTo>
    <File line="49">src/br/com/embraer/transima/matlab/client/MatlabClient.java</File>
    <Type></Type>
    <Severity></Severity>
    <Summary>Move this to inside the catch</Summary>
    <Description>try {
	hostPort = Integer.valueOf(hostPort);
} catch (Exception e) {
	hostPort = Registry.REGISTRY_PORT;
}
</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution></Resolution>
    <Status></Status>
  </ReviewIssue>
  <ReviewIssue id="HEBKHCCZ">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-15 :: 13:34:31:763 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-15 :: 14:18:11:094 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo></AssignedTo>
    <File line="83">src/br/com/embraer/transima/matlab/client/MatlabClient.java</File>
    <Type></Type>
    <Severity></Severity>
    <Summary>Untreated exceptions</Summary>
    <Description>In the way the code is now, these exceptions will leave the class in an invalid state: with matlabRemote as "null". I think it is better to inform the user now.</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution></Resolution>
    <Status></Status>
  </ReviewIssue>
  <ReviewIssue id="HEBMKLSX">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-15 :: 14:33:03:201 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-15 :: 14:39:23:785 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo></AssignedTo>
    <File line="145">src/br/com/embraer/transima/matlab/client/MatlabClient.java</File>
    <Type></Type>
    <Severity></Severity>
    <Summary>I didn't understand why this.</Summary>
    <Description>find_system only returns loaded models. Why this second check?

(Note: this check may be useful before we get information from Simulink, since we cannot assume that the user will not close the model between the call to the models and the call to get some information from it)</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution></Resolution>
    <Status></Status>
  </ReviewIssue>
  <ReviewIssue id="HEBMTUIX">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-15 :: 14:40:14:409 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-15 :: 14:40:44:283 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo>rstarr</AssignedTo>
    <File line="9">src/br/com/embraer/transima/matlab/client/MatlabRemoteInterface.java</File>
    <Type>item.label.unset</Type>
    <Severity>item.label.unset</Severity>
    <Summary>What is you opinion about the IName convention for interfaces?</Summary>
    <Description>I like it, but this is of course a matter of taste.</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.label.unset</Resolution>
    <Status>item.status.label.open</Status>
  </ReviewIssue>
  <ReviewIssue id="HELEPDRY">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-22 :: 10:50:30:910 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-22 :: 10:51:25:083 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo></AssignedTo>
    <File line="41">src/br/com/embraer/transima/matlab/server/MatlabServerController.java</File>
    <Type></Type>
    <Severity></Severity>
    <Summary>I think this should be set only in the run() method</Summary>
    <Description>There is a small possibility of the class returning isRunning and it is not.</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution></Resolution>
    <Status></Status>
  </ReviewIssue>
  <ReviewIssue id="HELETL7V">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-22 :: 10:53:47:179 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-22 :: 10:54:25:508 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo></AssignedTo>
    <File line="14">src/br/com/embraer/transima/matlab/command/ServerCommand.java</File>
    <Type></Type>
    <Severity></Severity>
    <Summary>Style issue: should this be an enum?</Summary>
    <Description>It is just a matter of style. I like enums :-)</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution></Resolution>
    <Status></Status>
  </ReviewIssue>
  <ReviewIssue id="HELEXM69">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-22 :: 10:56:55:041 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-22 :: 10:58:16:807 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo></AssignedTo>
    <File line="16">src/br/com/embraer/transima/matlab/command/ServerCommand.java</File>
    <Type></Type>
    <Severity></Severity>
    <Summary>From the code in the MatlabServerController.executeCommand, these comments seen to be wrong.</Summary>
    <Description>From what is in MatlabServerController, INTERNAL_COMMAND looks like is a noop and
INTERACTION_COMMAND looks like a Matlab command.</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution></Resolution>
    <Status></Status>
  </ReviewIssue>
  <ReviewIssue id="HELF059S">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-22 :: 10:58:53:104 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-22 :: 10:59:43:573 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo>rstarr</AssignedTo>
    <File line="27">src/br/com/embraer/transima/matlab/command/ServerCommand.java</File>
    <Type>item.label.unset</Type>
    <Severity>item.label.unset</Severity>
    <Summary>Synchronize this?</Summary>
    <Description>Given that output may be read from a thread and written from another, should we synchronize this method to avoid a possible partial read of the outputs?</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution>item.label.unset</Resolution>
    <Status>item.status.label.open</Status>
  </ReviewIssue>
  <ReviewIssue id="HELF349S">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-22 :: 11:01:11:776 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-22 :: 11:01:32:510 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo></AssignedTo>
    <File line="64">src/br/com/embraer/transima/matlab/server/MatlabServerController.java</File>
    <Type></Type>
    <Severity></Severity>
    <Summary>What are INTERNAL_COMMANDS for?</Summary>
    <Description>Why is this a noop?</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution></Resolution>
    <Status></Status>
  </ReviewIssue>
  <ReviewIssue id="HELF6FEB">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-22 :: 11:03:46:163 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-22 :: 11:06:55:893 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo></AssignedTo>
    <File line="70">src/br/com/embraer/transima/matlab/server/MatlabServerController.java</File>
    <Type></Type>
    <Severity></Severity>
    <Summary>Architecture remark</Summary>
    <Description>This is also a matter of personal style. I do not like switches and constants carrying class type information. My suggestion would be to:

1) Remove this switch

2) Create an abstract method in class InteractionCommand called "eval", or "run", or "executeCommand"
	Then, each subclass of InteractionCommand would "know" which method of jmi.Matlab to call.
	(This is the principle of "the one who has the information is the one to do the job")

Just a suggestion</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution></Resolution>
    <Status></Status>
  </ReviewIssue>
  <ReviewIssue id="HELFAJS7">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-22 :: 11:06:58:471 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-22 :: 11:07:35:111 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo></AssignedTo>
    <File line="76">src/br/com/embraer/transima/matlab/server/MatlabServerController.java</File>
    <Type></Type>
    <Severity></Severity>
    <Summary>Why are these ignored? What do they mean?</Summary>
    <Description></Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution></Resolution>
    <Status></Status>
  </ReviewIssue>
  <ReviewIssue id="HELFBFMV">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-22 :: 11:07:39:751 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-22 :: 11:08:23:063 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo></AssignedTo>
    <File line="87">src/br/com/embraer/transima/matlab/server/MatlabServerController.java</File>
    <Type></Type>
    <Severity></Severity>
    <Summary>Why are these ignored? What do they mean?</Summary>
    <Description>I think it is necessary to give the user some error information if a command fails. The error object may be saved for further inspection.</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution></Resolution>
    <Status></Status>
  </ReviewIssue>
  <ReviewIssue id="HELFCGRO">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-22 :: 11:08:27:876 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-22 :: 11:08:48:157 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo></AssignedTo>
    <File line="87">src/br/com/embraer/transima/matlab/server/MatlabServerController.java</File>
    <Type></Type>
    <Severity></Severity>
    <Summary>Whas it supposed to have something here?</Summary>
    <Description>Why is this finally clause empty?</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution></Resolution>
    <Status></Status>
  </ReviewIssue>
  <ReviewIssue id="HELFD0KC">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-22 :: 11:08:53:532 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-22 :: 11:09:13:125 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo></AssignedTo>
    <File line="90">src/br/com/embraer/transima/matlab/server/MatlabServerController.java</File>
    <Type></Type>
    <Severity></Severity>
    <Summary>Whas it supposed to have something here?</Summary>
    <Description>Why is this finally clause empty?</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution></Resolution>
    <Status></Status>
  </ReviewIssue>
  <ReviewIssue id="HELFS0VZ">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-22 :: 11:20:33:791 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-22 :: 11:20:47:072 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo></AssignedTo>
    <File line="108">src/br/com/embraer/transima/matlab/server/MatlabServerController.java</File>
    <Type></Type>
    <Severity></Severity>
    <Summary>Why is this exception ignored?</Summary>
    <Description></Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution></Resolution>
    <Status></Status>
  </ReviewIssue>
  <ReviewIssue id="HELG226A">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-22 :: 11:28:22:018 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-22 :: 11:29:50:954 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo></AssignedTo>
    <File line="118">src/br/com/embraer/transima/matlab/server/MatlabServerController.java</File>
    <Type></Type>
    <Severity></Severity>
    <Summary>This add and the put below should be protected</Summary>
    <Description>It may be possible that this add is interrupted during its execution, since this list will be accessed by more than on thread. The same comment is true for the "put" just below.</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution></Resolution>
    <Status></Status>
  </ReviewIssue>
  <ReviewIssue id="HELG465H">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-22 :: 11:30:00:485 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-22 :: 11:30:23:360 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo></AssignedTo>
    <File line="33">src/br/com/embraer/transima/matlab/server/MatlabServerController.java</File>
    <Type></Type>
    <Severity></Severity>
    <Summary>Give a better explanation of who will be using this lock</Summary>
    <Description></Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution></Resolution>
    <Status></Status>
  </ReviewIssue>
  <ReviewIssue id="HELG8CAD">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-22 :: 11:33:15:061 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-22 :: 11:34:45:716 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo></AssignedTo>
    <File line="149">src/br/com/embraer/transima/matlab/server/MatlabServerController.java</File>
    <Type></Type>
    <Severity></Severity>
    <Summary>is it possible to use a wait?</Summary>
    <Description></Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution></Resolution>
    <Status></Status>
  </ReviewIssue>
  <ReviewIssue id="HELGW26Y">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-22 :: 11:51:41:722 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-03-22 :: 11:52:06:268 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo></AssignedTo>
    <File line="41">src/br/com/embraer/transima/matlab/server/ServerEntryPoint.java</File>
    <Type></Type>
    <Severity></Severity>
    <Summary>Maybe you should merge this in the catch above.</Summary>
    <Description></Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution></Resolution>
    <Status></Status>
  </ReviewIssue>
  <ReviewIssue id="HF1CY856">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-04-02 :: 14:45:43:098 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-04-02 :: 14:47:38:331 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo></AssignedTo>
    <File line="10">src/br/com/embraer/transima/matlab/command/InteractionCommand.java</File>
    <Type></Type>
    <Severity></Severity>
    <Summary>Use subclasses instead of constants</Summary>
    <Description>This is a style question, but, as I said in another comment, I would get rid of these constants and add a method in this abstract class to execute the command using the Matlab API (or a proxy) directly.</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution></Resolution>
    <Status></Status>
  </ReviewIssue>
  <ReviewIssue id="HF1D1V4T">
    <ReviewIssueMeta>
      <CreationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-04-02 :: 14:48:32:861 BRT</CreationDate>
      <LastModificationDate format="yyyy-MM-dd :: HH:mm:ss:SSS z">2013-04-02 :: 14:50:55:000 BRT</LastModificationDate>
    </ReviewIssueMeta>
    <ReviewerId>rstarr</ReviewerId>
    <AssignedTo></AssignedTo>
    <File line="4">src/br/com/embraer/transima/matlab/command/InternalCommand.java</File>
    <Type></Type>
    <Severity></Severity>
    <Summary>Shouldn't this be an abstract class as well?</Summary>
    <Description>I know this class is, so far, not used,  but it would be good if it had some simmetry with the MatlabCommand classes.</Description>
    <Annotation></Annotation>
    <Revision></Revision>
    <Resolution></Resolution>
    <Status></Status>
  </ReviewIssue>
</Review>