= OSLC Client Example

== Prerequisites

The example assumes a Matlab Simulink OSLC service running, set up so that its catalog can be reached at `http://localhost:8080/OSLCSimulinkAdaptor/services/catalog/`.
To set up a Matlab Simulink OSLC Service, please see the OSLC Adaptor Guide.
//TODO add link to olsc adaptor guide

In Matlab Simulink, the simulink model should be loaded, since the example queries its elements.
The simulink model can be loaded by typing the following command in the matlab console: `simulink`.

== OSLC Client

The code mainly uses the `OslcClient` class provided by the Eclipse Lyo Client API.
It allows the lookup of service providers and resources.
The code example below shows the usage of the client.
[source, java]
----
client.lookupServiceProviderUrl(catalogUrl, serviceProviderTitle);
client.getResource(simuServiceProvider + '/' + resourceType + '/' + resourceId, OSLCConstants.CT_RDF);
----
The first method, `lookupServiceProviderUrl` asks for the URL of the catalog and the title of the service provider, and returns the URL to the concrete service provider.
The second method, `getResource` returns the resources provided in the resource URL, in the format provided by the second parameter.
The resource URL consists of the service provider URL, the type of the resource and optionally the id of the resource.
If the id of the resource is not present, every resource with the provided type will be returned.
The format of the resource can be either JSON, RDF+XML or XML.
The getResource method returns a `ClientResponse` object.
The `ClientResponse` class has a `getEntity` method.
In this case it can be used to get an `InputStream` that provides access to the resource itself in `String` format, which can then be processed.

The example demonstrates both querying every element of a resource type and searching for a single element specified by an id.